aleph.

this
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

b todo

UPDATE spreadsheet

12V system rethink

input gain stage
	LED follower, LED clip
output gain stage
	LED follower
headphone amp
	LED follower

# debouncing: http://www.ganssle.com/debouncing.htm

schem cleanup

enclosure


e todo

new ops
usb host
i2c
avr32 bootloader

USB roadmap: 
see aleph/avr32/asf-3.7.3/common/services/usb/uhc/uhc.h 
for high-level description and code examples (in comments)
we need to implement task callbacks, etc


team todo

text
	concise description
	technical/functional/abstract // whitepaper
	documentation // framework/toolchain and specs
	manual // instructional




future

ui



	
think about
	dsp page (integrate with setups page?)
	symbols when page changing
	extended menu via last button (up triangle)
	macros in routing mode, for example: insert trigger here (preserves routing to existing target)
	operator page, each operator can have menu button which calls custom UI (ie, list editor)


avr32
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
BEES port / finish
	UI glue
	filesystem glue
	DSP selection page
	presets page
	scenes page
	numerical representation abstraction
	op re-ordering and deletion

new operators:
	linear map
	range select
	split
	metronome
	sequence
	CV input
	HID input
	(HID output ?)
	(CV output ?)

UI refinement
	right-alignment
	setter fields (numbers and strings)
	line inversion
	timed select / scroll
	encoder acceleration

operator timing layer

HID layer
FTDI layer

MMC bootloader


fin
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
patches
	FM synth
		envelopes
	   	waveshaping tables

	granular engine
		envelopes
		scheduler 

	echo
		parameter scaling
		looping-mode controls

	analysis / resynth  / dynamics
		 fft centroid / flatness
		 fundamental (autocorrelation)
		 amplitude

	phase vocoder
	      fft (high res)
	      ifft (phase preserving)

shared avr/fin
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

benchmarking
	have access to uptime counter in CPU cycles on both cores.
	attempt to calculate % load based on event loop period?
	can also watch for event handling jitter on scope


analog
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
input switching inst/line
matrix
filter
shaper
preamps
bypass
LED driving
output gain stages
vca



general
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
nomenclature
	preset, param-set
	series
	op
	output/input
	network
	controller, dsp
use cases
spec apps: mlr, etc

cost analysis

description, abstract, functional uses
branding


